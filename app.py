from flask import Flask, request, jsonify
from flask_cors import CORS
import google.generativeai as genai
import os
from dotenv import load_dotenv
from prompts import get_language_prompt
from custom_prompts import get_custom_prompt, get_all_custom_prompts

app = Flask(__name__)
CORS(app)

load_dotenv()
GOOGLE_API_KEY = os.getenv("GOOGLE_API_KEY")
genai.configure(api_key=GOOGLE_API_KEY)

model = genai.GenerativeModel('gemini-2.5-flash-preview-04-17')

@app.route('/api/chat', methods=['POST'])
def chat():
    try:
        data = request.json
        user_message = data.get('message', '')
        language = data.get('language', 'russian')
        difficulty_level = data.get('difficulty', 'Normal')
        client_history = data.get('history', []) # –ò—Å—Ç–æ—Ä–∏—è —Å –∫–ª–∏–µ–Ω—Ç–∞

        system_prompt_for_persona = ""
        custom_prompt = get_custom_prompt(language)
        if custom_prompt:
            system_prompt_for_persona = custom_prompt
        else:
            system_prompt_for_persona = get_language_prompt(language, difficulty_level)

        effective_history_for_model = []

        # –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç—Å–∫–∞—è –∏—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞, —ç—Ç–æ –Ω–∞—á–∞–ª–æ –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏ —á–∞—Ç–∞.
        # –ù–∞–º –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –≤ –Ω–∞—á–∞–ª–æ –±–µ—Å–µ–¥—ã.
        if not client_history:
            effective_history_for_model.append({'role': 'user', 'parts': [{'text': system_prompt_for_persona}]})
            effective_history_for_model.append({'role': 'model', 'parts': [{'text': ''}]}) # –ò–Ω–∏—Ü–∏–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å –ø—É—Å—Ç—ã–º –æ—Ç–≤–µ—Ç–æ–º

        # –î–æ–±–∞–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—É—é –∫–ª–∏–µ–Ω—Ç–æ–º (–∫–æ—Ç–æ—Ä–∞—è —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ö–æ–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è/–º–æ–¥–µ–ª–∏)
        effective_history_for_model.extend(client_history)

        convo = model.start_chat(history=effective_history_for_model)

        response_text = ""
        # –≠—Ç–æ –Ω–∞—á–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å DM –¥–ª—è D&D –∏–≥—Ä—ã (–ø—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—É—Å—Ç–∞—è –∫–ª–∏–µ–Ω—Ç—Å–∫–∞—è –∏—Å—Ç–æ—Ä–∏—è)
        if not user_message and not client_history:
            response_text = convo.send_message("–ù–∞—á–Ω–∏ –∏–≥—Ä—É").text # –°–∫—Ä—ã—Ç–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è DM
        else: # –û–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è DM
            response_text = convo.send_message(user_message).text
        
        return jsonify({
            'response': response_text,
            'language': language,
            'difficulty': difficulty_level
        })

    except Exception as e:
        return jsonify({'error': str(e)}), 500

@app.route('/api/languages', methods=['GET'])
def get_available_languages():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —è–∑—ã–∫–æ–≤"""
    custom_prompts = get_all_custom_prompts()
    
    base_languages = [
        {'id': 'russian', 'name': '–†—É—Å—Å–∫–∏–π', 'description': '–†—É—Å—Å–∫–∏–π —è–∑—ã–∫', 'flag': 'üá∑üá∫'},
        {'id': 'ukrainian', 'name': '–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞', 'description': '–£–∫—Ä–∞–∏–Ω—Å–∫–∏–π —è–∑—ã–∫', 'flag': 'üá∫üá¶'},
        {'id': 'english', 'name': 'English', 'description': '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫', 'flag': 'üá∫üá∏'},
        {'id': 'german', 'name': 'Deutsch', 'description': '–ù–µ–º–µ—Ü–∫–∏–π —è–∑—ã–∫', 'flag': 'üá©üá™'},
        {'id': 'french', 'name': 'Fran√ßais', 'description': '–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π —è–∑—ã–∫', 'flag': 'üá´üá∑'},
        {'id': 'spanish', 'name': 'Espa√±ol', 'description': '–ò—Å–ø–∞–Ω—Å–∫–∏–π —è–∑—ã–∫', 'flag': 'üá™üá∏'},
        {'id': 'italian', 'name': 'Italiano', 'description': '–ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π —è–∑—ã–∫', 'flag': 'üáÆüáπ'},
        {'id': 'chinese', 'name': '‰∏≠Êñá', 'description': '–ö–∏—Ç–∞–π—Å–∫–∏–π —è–∑—ã–∫', 'flag': 'üá®üá≥'}
    ]
    
    all_languages = base_languages
    
    return jsonify({'languages': all_languages})

@app.route('/api/modes', methods=['GET'])
def get_available_modes():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–µ–∂–∏–º–æ–≤ (–¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)"""
    return get_available_languages()

@app.route('/api/prompts', methods=['GET'])
def get_prompts():
    """–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã (–¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö —Ü–µ–ª–µ–π)"""
    try:
        custom_prompts = get_all_custom_prompts()
        return jsonify({
            'custom_prompts': custom_prompts,
            'message': '–ü—Ä–æ–º–ø—Ç—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã'
        })
    except Exception as e:
        return jsonify({'error': str(e)}), 500

if __name__ == '__main__':
    app.run(debug=True, port=5000) 