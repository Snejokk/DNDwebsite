@import url('https://fonts.googleapis.com/css2?family=VT323&display=swap');

@font-face {
  font-family: 'DeterminationMonoRus';
  src: url('../FILES/determinationmonorusbylyajk.otf') format('opentype');
  font-weight: normal;
  font-style: normal;
}

/* --- Стили для Body (можно оставить в <style> в HTML) --- */
body {
    background-color: #555555; /* Начальный средний серый цвет */
    animation: greyPulse 5s ease-in-out infinite; /* Применяем анимацию: 5 секунд, плавное, бесконечно */
    min-height: 100vh;
    margin: 0;
    display: flex;
    flex-direction: column; /* Элементы внутри body будут идти сверху вниз */
    /* background-attachment: fixed; */ /* Можно добавить, если фон не должен прокручиваться */
    font-family: 'DeterminationMonoRus', 'VT323', monospace;
}

/* --- Стили для Контейнера кнопок --- */
.container {
    display: flex; /* Включаем Flexbox */
    justify-content: center; /* Центрируем кнопки по горизонтали КАК ГРУППУ */
    align-items: center; /* Выравниваем кнопки по центру по вертикали */
    gap: 60px; /* Расстояние МЕЖДУ кнопками (подберите нужное) */
    padding: 5vh 20px; /* Добавляем отступы сверху/снизу и по бокам контейнера */
    flex-wrap: wrap; /* Позволяем кнопкам переноситься на новую строку на маленьких экранах */
    flex: 1; /* Позволяет контейнеру занять доступное пространство по вертикали в body */
}

/* --- Общие стили для ВСЕХ кнопок --- */
.Fpromt {
    /* Убрали: position, top, left */
    width: 200px;
    height: 600px; /* Оставил вашу высоту, но она ОЧЕНЬ большая для кнопки */
    border: 3px solid black; /* Упростил определение border */
    transition: transform 0.2s ease-out, box-shadow 0.2s ease-out; /* Упростил transition */
    background-color: rgba(255, 255, 255, 0.35); /* Изменено с pink на серый */
    border-radius: 8px;
    box-shadow: inset 2px 20px 50px rgba(0, 0, 0, 0.35);
    transform: translateY(0px); /* Начальное состояние для анимации */
    cursor: pointer; /* Хорошая практика для кнопок */
    font-family: 'VT323', monospace; /* Шрифт по умолчанию для всего */
    font-size: 3em; /* Базовый стиль текста */
    color: black; /* Базовый стиль текста */
    /* Важно: не используйте transition: all, это менее производительно */
}

/* --- Анимации (остаются без изменений) --- */
.Fpromt:hover {
    animation: HoverAnim 0.2s ease-out forwards;
}

/* :not(:hover) может быть не нужен, если использовать transition */
/* Если анимация возврата нужна именно такой, оставьте .Fpromt:not(:hover) */
/* Но обычно достаточно простого transition на основном классе .Fpromt */
/* .Fpromt:not(:hover) { */
/*     animation: fpromt-hover-out 0.5s ease-out forwards; */
/* } */

@keyframes HoverAnim {
    0% {
        transform: translateY(0px);
        box-shadow: inset 2px 20px 50px rgba(0, 0, 0, 0.35);
    }
    50% {
        transform: translateY(-7px);
        box-shadow: inset 2px 20px 50px rgba(0, 0, 0, 0.3);
    }
    100% {
        transform: translateY(-12px);
        box-shadow: inset 2px 20px 50px rgba(0, 0, 0, 0.35);
    }
}

.Fpromt:not(:hover) {
animation: fpromt-hover-out 0.5s ease-out forwards; /* Запускаем анимацию при выходе из hover */
}

@keyframes fpromt-hover-out {
    0% {
        transform: translateY(-12px);
    }
    50% {
        transform: translateY(4px);
    }
    100% {
        transform: translateY(0px);
    }
}

/* --- Стили для виньетки и квадратов (остаются без изменений) --- */
.vignette {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  pointer-events: none;
  z-index: 100;
  background-image: radial-gradient(circle at center, transparent 20%, rgba(0, 0, 0, 0.5) 70%, rgba(0, 0, 0, 0.8) 100%);
}

#square {
    z-index: 9999;
    position: fixed;
    bottom: -100vh;
    left: 0;
    width: 100vw;
    height: 100vh;
    background-color: #000000;
    box-shadow:
        0 0 100px 100px black,
        0 0 50px 50px black inset,
        20px 0 20px 20px black,
        -20px 0 20px 20px black;
    /* Возможно, здесь тоже нужна анимация для появления? */
}

#square1 {
    z-index: 9999;
    position: fixed;
    bottom: -10vh;
    left: 0; /* calc(0%) это просто 0 */
    width: 5000px; /* Это очень широко, убедитесь, что так задумано */
    height: 3000px; /* Это очень высоко */
    background-color: #000000;
    opacity: 1;
    animation: fadeInS 0.1s ease-in-out 0.05s forwards 1; /* Сокращенная запись */
}

/* Анимация для #square1 - кажется странной логика */
/* Он появляется видимым, через ~0.5с становится невидимым при transform: translateY(0px) */
/* а потом мгновенно прыгает на -4000px вверх и снова становится видимым? */
@keyframes fadeInS {
    0% {
       opacity: 1;
       /* transform: translateY(0px); */ /* Можно задать начальное положение, если нужно */
    }
    99% {
       transform: translateY(0px); /* Остается на месте */
       opacity: 0; /* Становится невидимым */
    }
    100% {
       transform: translateY(-4000px); /* Мгновенно перемещается вверх */
       opacity: 1; /* И снова становится видимым */
    }
}

@keyframes greyPulse {
    0% {
        background-color: #555555; /* Средний серый */
    }
    50% {
        background-color: #333333; /* Темнее */
    }

    100% {
        background-color: #555555; /* Возвращаемся к среднему */
    }
}